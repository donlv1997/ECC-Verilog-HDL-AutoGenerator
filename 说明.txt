12.14 Update
    已实现decoder电路并仿真验证功能正确：
        截图中的例子为假设输入信息码为FFFF，生成的CRC校验码应该是800d。我们将信息码和校验码组合在一起生成一个dataword: 32'hFFFF800D
        假设存储的写入过程或者传输信道中有干扰或错误，使dataword的一个bit发生错误，使dataword变为FFFE800D，
        即decoder和corrector的输入为FFFE800D，可以发现经过dataword decoder,和error-location map decoder,与一系列并行非门纠错模块后，其输出变为FFFF800D
        也即自动纠1位错的功能得到了证明。如果错误位数大于一位，该电路也能够发现，只是error-location map映射表中找不到对应的纠正项。
        通过完善该映射表，可以实现纠正多位错误的功能。
        但CRC码主要用于发现错误，以及纠正少量错误。其优势性主要在于发现错误的硬件开销小，因此这里只实现了一位错的纠正和任意位错误的发现

-------------------------------------------------------
算法部分：由于MATLAB的高效矩阵运算性能，算法部分由MATLAB实现
mat文件夹下，generatorGUI.m ，目前已经实现的功能和算法：
    1.求解任意生成多项式、数据校验位宽的循环校验码编码算法。包括计算Data矩阵，Crc矩阵，给定信息位求校验位3个功能；
    2.求解任意生成多项式、数据校验位宽的循环校验码解码算法。可一键生成Error-Bits映射关系表；
    3.输入生成多项式、（parallel data bits）并行度和校验位宽，一键生成对应的verilog HDL组合逻辑功能模块;

    4.已经在算法上解决但还没进行硬件仿真：解码电路，可自动纠正一位错。



功能仿真：源码位于src目录，部分仿真截图位于img目录
    1.仿真了串行实现，16位CRC校验（x^16+x^15+x^2+1）电路，证明其功能正确。证明了其需要data bits个时钟周期才能得到输出，速度低，但占用面积小；
    2.仿真了并行实现，16位CRC校验（x^16+x^15+x^2+1）电路，证明其功能正确。证明了其只需要1个时钟周期就能处理16位数据得到输出，速度快，但占用面积大；
    3.(讨论)关于实际应用如何选择并行度的问题：trade-off between speed and cost.

需要解决的问题：
    1.如何定量描述串行，并行的面积代价。可能需要用quatusII综合一下，但是我电脑没装，你们到时候能不能帮帮忙？


参考资料：很多ecc资料的U盘我找不到了，QAQ。但是还是把少部分资料放在了doc目录下
